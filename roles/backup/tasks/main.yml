- name: Become Block
  become: true
  block:
    - name: Install borg + borgmatic Build Dependencies
      ansible.builtin.apt:
        name:
          - python3
          - python3-dev
          - python3-pip
          - python3-venv
          - python3-virtualenv
          - libacl1-dev
          - libssl-dev
          - liblz4-dev
          - libzstd-dev
          - libxxhash-dev
          - build-essential
          - pkg-config
          - postgresql-client
        state: present

    - name: Ensure proxmoxer is installed
      ansible.builtin.pip:
        name:
          - pipx
        state: present
        break_system_packages: true

    - name: Build borgbackup as root
      community.general.pipx:
        name: borgbackup
        state: present

    - name: Build borgmatic as root
      community.general.pipx:
        name: borgmatic
        state: present

    - name: Build borgbackup
      community.general.pipx:
        name: borgbackup
        state: present
      become: false

    - name: Build borgmatic
      community.general.pipx:
        name: borgmatic
        state: present
      become: false

    - name: Ensure /root/.local/bin is in secure_path
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: '^Defaults\s+secure_path='
        line: 'Defaults    secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.local/bin"'
        validate: 'visudo -cf %s'

    - name: Create Config Directory
      ansible.builtin.file:
        path: "/etc/borgmatic"
        state: directory
        mode: "0755"
        owner: "root"
        group: "root"

    - name: Create Backup Directory
      ansible.builtin.file:
        path: "/backup"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Render Config Template
      ansible.builtin.template:
        src: config.yaml.j2
        dest: /etc/borgmatic/config.yaml
        mode: "0664"
        owner: "root"
        group: "root"

    - name: Copy SSH Keys
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/home/{{ ansible_user }}/.ssh/{{ item }}"
        mode: "0600"
        owner: "{{ ansible_user }}"
        group: 994
      loop:
        - "id_rsa"
        - "id_rsa.pub"

    - name: Download borgmatic Service
      ansible.builtin.get_url:
        url: https://projects.torsion.org/borgmatic-collective/borgmatic/raw/branch/main/sample/systemd/borgmatic.service
        dest: /etc/systemd/system/borgmatic.service
        mode: "0644"
        owner: root
        group: root

    - name: Download borgmatic Timer
      ansible.builtin.get_url:
        url: https://projects.torsion.org/borgmatic-collective/borgmatic/raw/branch/main/sample/systemd/borgmatic.timer
        dest: /etc/systemd/system/borgmatic.timer
        mode: "0644"
        owner: root
        group: root

    - name: Create drop-in directory for borgmatic.service
      ansible.builtin.file:
        path: /etc/systemd/system/borgmatic.service.d
        state: directory
        mode: "0755"

    - name: Install override to allow writes and add required capabilities
      ansible.builtin.copy:
        dest: /etc/systemd/system/borgmatic.service.d/override.conf
        mode: "0644"
        content: |
          [Service]
          Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.local/bin
          # Keep ProtectSystem=full but allow writes here
          ReadWritePaths=/backup
          # Add back the capabilities needed for root to create/write under /backup (owned by bkp)
          CapabilityBoundingSet=CAP_DAC_READ_SEARCH CAP_NET_RAW CAP_DAC_OVERRIDE CAP_FOWNER CAP_CHOWN
      notify:
        - Systemd daemon-reload

    - name: Start and Enable borgmatic Timer
      ansible.builtin.systemd_service:
        name: borgmatic.timer
        state: restarted
        enabled: true
